var J=Object.defineProperty;var ee=(u,s,t)=>s in u?J(u,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[s]=t;var l=(u,s,t)=>(ee(u,typeof s!="symbol"?s+"":s,t),t);import{l as te,p as ie,u as ne,n as O,j as U,f as V,a as k,e as P,g as G,b as H,i as oe,h as re,$ as se}from"../chunks/disclose-version.PTWSzQB1.js";import{p as j,a as K}from"../chunks/runtime.DsRB8KFS.js";const le=!0,pe=Object.freeze(Object.defineProperty({__proto__:null,prerender:le},Symbol.toStringTag,{value:"Module"})),ae=""+new URL("../assets/tiles.CXP0i5T3.png",import.meta.url).href;class Q{constructor(){l(this,"canvas");l(this,"context");l(this,"mapData");l(this,"mapWidth",0);l(this,"mapHeight",0);l(this,"tileWidth",0);l(this,"tileHeight",0);l(this,"panX",0);l(this,"panY",0);l(this,"viewWidth",0);l(this,"viewHeight",0);l(this,"zoom",1);this.canvas=void 0,this.context=void 0,this.mapData=new Uint16Array(0),this.mapWidth=1,this.mapHeight=1,this.tileWidth=0,this.tileHeight=0,this.viewWidth=0,this.viewHeight=0}initialize(s,t,i,e,o,r,a,c){return this.canvas=s,this.context=t,this.mapData=i,this.mapWidth=e,this.mapHeight=o,this.tileWidth=r,this.tileHeight=a,Promise.resolve()}screenToTile(s,t){const i=(s+this.panX)/(this.tileWidth*this.zoom),e=(t+this.panY)/(this.tileHeight*this.zoom);return[i,e]}tileToScreen(s,t){const i=s*this.tileWidth*this.zoom-this.panX,e=t*this.tileHeight*this.zoom-this.panY;return[i,e]}handleDrag(s,t){this.panX+=s,this.panY+=t}handleZoom(s,t,i){this.zoom*=s,this.panX=(this.panX-t)*s+t,this.panY=(this.panY-i)*s+i}updateScreenSize(s,t){this.viewWidth=s,this.viewHeight=t}}class ce extends Q{constructor(){super();l(this,"tileImage",null)}initialize(t,i,e,o,r,a,c,f){return super.initialize(t,i,e,o,r,a,c,f).then(()=>(this.context=i,this.tileImage=new Image,this.tileImage.src=f,new Promise((m,x)=>{if(!this.context||!this.tileImage)throw new Error("Canvas context or tile image is not properly initialized.");this.tileImage.onload=()=>m(),this.tileImage.onerror=()=>x(new Error(`Failed to load image at ${f}`))})))}render(){if(!this.canvas||!this.context||!this.tileImage)throw new Error("The canvas, 2d context, or tile image are not properly initialized.");this.updateScreenSize(this.canvas.width,this.canvas.height),this.context.fillStyle="#000000",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height);const t=this.context.canvas.width,i=this.context.canvas.height,e=t/2,o=i/2;this.tileWidth*this.zoom,this.tileHeight*this.zoom;const r=Math.max(0,Math.floor(this.panX/this.zoom)),a=Math.max(0,Math.floor(this.panY/this.zoom)),c=this.mapWidth,f=this.mapHeight;for(let m=a;m<f;m++)for(let x=r;x<c;x++){const z=this.mapData[m*this.mapWidth+x],I=e+(x-this.panX)*this.tileWidth*this.zoom,T=o+(m-this.panY)*this.tileHeight*this.zoom,p=this.tileImage.width/this.tileWidth,d=z%p*this.tileWidth,g=Math.floor(z/p)*this.tileHeight;this.context.drawImage(this.tileImage,d,g,this.tileWidth,this.tileHeight,I,T,this.tileWidth*this.zoom,this.tileHeight*this.zoom)}}}class he extends Q{constructor(){super();l(this,"tilesTexture",null);l(this,"mapTexture",null);l(this,"tilesWidth",0);l(this,"tilesHeight",0);l(this,"tileProgramInfo",null);l(this,"tileBufferInfo",null);l(this,"screenTileArray",new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]))}initialize(t,i,e,o,r,a,c,f){return super.initialize(t,i,e,o,r,a,c,f).then(()=>(this.context=i,this.context.getExtension("EXT_texture_norm16")?(this.tileProgramInfo=this.createShaderProgram(),this.tileBufferInfo=this.createBuffers(),this.mapTexture=this.createMapTexture(e,o,r),this.loadTexture(f)):(console.error("R32UI format is not supported on this device."),null))).then(()=>{}).catch(m=>{throw m})}createMapTexture(t,i,e){if(!this.context)return console.error("GL context is not initialized."),null;const o=this.context.createTexture();return this.context.bindTexture(this.context.TEXTURE_2D,o),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.R16UI,i,e,0,this.context.RED_INTEGER,this.context.UNSIGNED_SHORT,t),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.NEAREST),o}loadTexture(t){return new Promise((i,e)=>{if(!this.context){e(new Error("GL context is not initialized."));return}const o=this.context.createTexture();this.tilesTexture=o,this.context.bindTexture(this.context.TEXTURE_2D,o),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.RGBA,1,1,0,this.context.RGBA,this.context.UNSIGNED_BYTE,new Uint8Array([0,0,0,255]));const r=new Image;r.onload=()=>{if(!this.context){e(new Error("GL context is not initialized."));return}this.tilesWidth=r.width,this.tilesHeight=r.height,this.context.bindTexture(this.context.TEXTURE_2D,o),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.RGBA,this.context.RGBA,this.context.UNSIGNED_BYTE,r),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.LINEAR),i()},r.onerror=()=>{e(new Error(`Failed to load texture at ${t}`))},r.src=t})}createShaderProgram(){if(!this.context)throw new Error("The WebGL context is not initialized.");const e=this.compileShaders(`#version 300 es
precision mediump float;
in vec3 a_position;
in vec2 a_screenTile;
out vec2 v_screenTile;

void main() {

    gl_Position = vec4(a_position, 1.0);
    v_screenTile = a_screenTile;

}
`,`#version 300 es
precision mediump float;
precision highp usampler2D;
uniform vec2 u_tileSize; // 16 16
uniform vec2 u_tilesSize; // 256 960
uniform sampler2D u_tiles;
uniform vec2 u_mapSize; // 256 256
uniform usampler2D u_map;
in vec2 v_screenTile;
out vec4 fragColor;

void main() {

    // Calculate the screen tile coordinate.
    vec2 screenTileColRow = floor(v_screenTile);
    vec2 screenTilePosition = v_screenTile - screenTileColRow;

    vec2 cellColRow = mod(screenTileColRow, u_mapSize);
    vec2 cellUV = cellColRow / u_mapSize;

    // Extract data from the 16-bit unsigned integer texture
    float cellValue = float(texture(u_map, cellUV).r); // Directly use the red channel as the cell value

    // Calculate the tile row and column from the cell value.
    float tilesPerRow = u_tilesSize.x / u_tileSize.x;
    float tilesPerCol = u_tilesSize.y / u_tileSize.y;

    // Wrap the cell value by the number of tiles there are.
    cellValue = mod(cellValue, tilesPerRow * tilesPerCol);

    float tileRow = floor(cellValue / tilesPerRow);
    float tileCol = mod(cellValue, tilesPerRow);

    // Calculate which pixel of the tile to sample.
    vec2 tileCorner = vec2(tileCol, tileRow) * u_tileSize;
    vec2 tilePixel = tileCorner + (screenTilePosition * u_tileSize);
    vec2 uv = tilePixel / u_tilesSize;

    // Sample the tile.
    fragColor = texture(u_tiles, uv);

}
`);if(!e)throw new Error("Unable to create shader program");const o={position:this.context.getAttribLocation(e,"a_position"),screenTile:this.context.getAttribLocation(e,"a_screenTile")},r={tileSize:this.context.getUniformLocation(e,"u_tileSize"),tilesSize:this.context.getUniformLocation(e,"u_tilesSize"),tiles:this.context.getUniformLocation(e,"u_tiles"),mapSize:this.context.getUniformLocation(e,"u_mapSize"),map:this.context.getUniformLocation(e,"u_map")};for(const[a,c]of Object.entries(o))if(c===-1)throw new Error(`Shader attribute location not found: ${a}`);for(const[a,c]of Object.entries(r))if(c===null)throw new Error(`Shader uniform location not found: ${a}`);return{program:e,attributeLocations:o,uniformLocations:r}}compileShaders(t,i){if(!this.context)throw new Error("The WebGL context is not initialized.");const e=this.loadShader(this.context.VERTEX_SHADER,t),o=this.loadShader(this.context.FRAGMENT_SHADER,i),r=this.context.createProgram();if(!r)throw new Error("Unable to create shader program");if(this.context.attachShader(r,e),this.context.attachShader(r,o),this.context.linkProgram(r),!this.context.getProgramParameter(r,this.context.LINK_STATUS)){const a=this.context.getProgramInfoLog(r);throw this.context.deleteProgram(r),new Error("Failed to link shader program: "+a)}return r}loadShader(t,i){if(!this.context)throw new Error("The WebGL context is not initialized.");const e=this.context.createShader(t);if(!e)throw new Error("Unable to create shader.");if(this.context.shaderSource(e,i),this.context.compileShader(e),!this.context.getShaderParameter(e,this.context.COMPILE_STATUS)){const o=this.context.getShaderInfoLog(e);throw this.context.deleteShader(e),new Error("An error occurred compiling the shaders: "+o)}return e}createBuffers(){if(!this.context)throw new Error("The WebGL context is not initialized.");const t=this.context.createBuffer();this.context.bindBuffer(this.context.ARRAY_BUFFER,t);const i=[-1,-1,0,1,-1,0,-1,1,0,-1,1,0,1,-1,0,1,1,0];this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array(i),this.context.STATIC_DRAW);const e=this.context.createBuffer(),o=this.context.createBuffer();this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,o);const r=[0,1,2,2,1,3];return this.context.bufferData(this.context.ELEMENT_ARRAY_BUFFER,new Uint16Array(r),this.context.STATIC_DRAW),{position:t,screenTile:e,indices:o}}updateScreenTileArray(){if(!this.context||!this.tileBufferInfo)throw new Error("The WebGL context is not initialized.");const t=this.panX,i=this.panX+this.viewWidth/this.zoom,e=this.panY,o=this.panY+this.viewHeight/this.zoom;this.screenTileArray.set([t,o,i,o,t,e,t,e,i,o,i,e]),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.tileBufferInfo.screenTile),this.context.bufferData(this.context.ARRAY_BUFFER,this.screenTileArray,this.context.DYNAMIC_DRAW)}render(){if(!this.canvas||!this.context||!this.tileProgramInfo||!this.tileBufferInfo||!this.tilesTexture)throw new Error("The canvas, WebGL context, shaders, or textures are not properly initialized.");this.updateScreenSize(this.canvas.width,this.canvas.height),this.context.viewport(0,0,this.context.drawingBufferWidth,this.context.drawingBufferHeight),this.context.clearColor(0,0,0,1),this.context.clearDepth(1),this.context.enable(this.context.DEPTH_TEST),this.context.depthFunc(this.context.LEQUAL),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT),this.context.useProgram(this.tileProgramInfo.program),this.context.uniform2f(this.tileProgramInfo.uniformLocations.tileSize,this.tileWidth,this.tileHeight),this.context.uniform2f(this.tileProgramInfo.uniformLocations.tilesSize,this.tilesWidth,this.tilesHeight),this.context.activeTexture(this.context.TEXTURE0),this.context.bindTexture(this.context.TEXTURE_2D,this.tilesTexture),this.context.uniform1i(this.tileProgramInfo.uniformLocations.tiles,0),this.context.activeTexture(this.context.TEXTURE1),this.context.bindTexture(this.context.TEXTURE_2D,this.mapTexture),this.context.uniform1i(this.tileProgramInfo.uniformLocations.map,1),this.context.uniform2f(this.tileProgramInfo.uniformLocations.mapSize,this.mapWidth,this.mapHeight),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.tileBufferInfo.position),this.context.vertexAttribPointer(this.tileProgramInfo.attributeLocations.position,3,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(this.tileProgramInfo.attributeLocations.position),this.updateScreenTileArray(),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.tileBufferInfo.screenTile),this.context.vertexAttribPointer(this.tileProgramInfo.attributeLocations.screenTile,2,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(this.tileProgramInfo.attributeLocations.screenTile),this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,this.tileBufferInfo.indices),this.context.viewport(0,0,this.context.canvas.width,this.context.canvas.height),this.context.drawElements(this.context.TRIANGLES,6,this.context.UNSIGNED_SHORT,0)}}var ue=H('<div><canvas class="svelte-mnct6x"></canvas> <br> <canvas class="svelte-mnct6x"></canvas></div>');function fe(u,s){K(s,!0),ie(s,"name",3,"Tile View");let t=16,i=16,e=960,o=256,r=960,a=ae,c=256,f=256,m=c*f,x=new Uint16Array(Array.from({length:m},()=>Math.floor(Math.random()*e))),z=512,I=512,T=null,p=null,d=null,g=null,R=null,E=null,L=[],C=10,D=null,b=!1,v=[0,0],w=[0,0];function W(){for(let n=0,h=x.length;n<h;n++)x[n]=Math.floor(Math.random()*e);for(let n of L)!n||!n.canvas||n.render()}function Z(n){if(!n)return null;for(let h of L)if(h.canvas==n)return h;return null}function X(n){let h=Z(n.target);return h==null?(console.log("TileView: trackMouse: no TileRenderer for event target:",n.target),null):(w=v,v=h.screenToTile(n.screenX,n.screenY),console.log("TileRenderer: trackMouse: event:",n,"mousePosLast:",w,"mousePos:",v,"tileRenderer:",h),h)}function F(n,h){console.log("TileRenderer: panBy:",n,h);for(let A of L)A.panX+=n,A.panY+=h}function Y(n){console.log("TileView: onmousedown: event:",n,"target:",n.target),X(n)&&(b=!0)}function M(n){if(!b||(console.log("TileView: onmousemove: event:",n,"target:",n.target),!X(n)))return;let A=w[0]-v[0],B=w[1]-v[1];F(A,B),W()}function y(n){if(!b||(console.log("TileView: onmouseup: event:",n,"target:",n.target),!X(n)))return;let A=w[0]-v[0],B=w[1]-v[1];F(A,B),W()}function $(n){if(n<=0){D!==null&&(clearInterval(D),D=null);return}D=setInterval(W,1e3/C)}ne(()=>{if(console.log("TileView: $effect: ","tileWidth:",t,"tileHeight:",i,"tileCount:",e,"tileTextureWidth:",o,"tileTextureHeight:",r,"tileTexture:",a,"mapWidth:",c,"mapHeight:",f,"mapLength:",m,"mapData:",x),console.log("TileView: $effect:","canvas2D:",T),T==null){console.log("TileView: $effect: canvas2D is null!");return}if(p=T.getContext("2d"),console.log("TileView: $effect:","ctx2D:",p),p==null){console.log("TileView: $effect: no ctx!");return}if(d=new ce,console.log("TileView: $effect: canvasTileRenderer:",d),d==null){console.log("TileView: $effect: no canvasTileRenderer!");return}if(console.log("TileView: $effect: initialize:","canvas2D:",T,"ctx2D:",p,"canvasTileRenderer:",d),d.initialize(T,p,x,c,f,t,i,a).then(()=>{if(console.log("TileView: $effect: initialize: then:","canvas2D:",T,"ctx2D:",p,"canvasTileRenderer:",d),T==null){console.log("TileView: $effect: initialize: then: no canvas2D!");return}if(p==null){console.log("TileView: $effect: initialize: then: no ctx2D!");return}if(d==null){console.log("TileView: $effect: initialize: then: no canvasTileRenderer!");return}d.render(),L.push(d)}),console.log("TileView: $effect:","canvasGL:",g),g==null){console.log("TileView: $effect: canvasGL is null!");return}if(R=g.getContext("webgl2"),console.log("TileView: $effect:","ctxGL:",R),R==null){console.log("TileView: $effect: no ctxGL!");return}if(E=new he,console.log("TileView: $effect: glTileRenderer:",E),d==null){console.log("TileView: $effect: no glTileRenderer!");return}return console.log("TileView: $effect: initialize:","canvasGL:",g,"ctxGL:",R,"glTileRenderer:",E),E.initialize(g,R,x,c,f,t,i,a).then(()=>{if(console.log("TileView: $effect: initialize: then:","canvasGL:",g,"ctxGL:",R,"glTileRenderer:",E),g==null){console.log("TileView: $effect: initialize: then: no canvasGL!");return}if(R==null){console.log("TileView: $effect: initialize: then: no ctxGL!");return}if(E==null){console.log("TileView: $effect: initialize: then: no glTileRenderer!");return}L.push(E),E.render()}),$(C),()=>{console.log("TileView: $effect: clean up"),$(0)}});var N=G(u,!0,ue),_=k(N);O(_,n=>T=n,T),U(_,"width",z),U(_,"height",I);var q=P(P(_,!0)),S=P(P(q,!0));O(S,n=>g=n,g),U(S,"width",z),U(S,"height",I),_.__mousedown=Y,_.__mousemove=M,_.__mouseup=y,S.__mousedown=Y,S.__mousemove=M,S.__mouseup=y,V(u,N),j()}te(["mousedown","mousemove","mouseup"]);var xe=H('<meta name="description" content="Micropolis Home">'),de=H('<section class="svelte-5p4ri1"><h1 class="svelte-5p4ri1">Canvas and WebGL Tile View Test:</h1> <!></section>');function Ee(u,s){K(s,!1),oe();var t=G(u,!0,de);re(o=>{var r=G(o,!0,xe);se.title="Micropolis Home",V(o,r)});var i=k(t),e=P(P(i,!0));fe(e,{}),V(u,t),j()}export{Ee as component,pe as universal};
